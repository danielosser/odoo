#!/bin/sh

set -e
. /usr/share/debconf/confmodule

ODOO_CONFIGURATION_FILE=/etc/odoo/odoo.conf
ODOO_GROUP="odoo"
ODOO_DATA_DIR=/var/lib/odoo
ODOO_LOG_DIR=/var/log/odoo
ODOO_USER="odoo"
NGINX_TEMPLATE=/etc/odoo/odoo-nginx-site.conf
NGINX_ODOO_FILE=/etc/nginx/sites-available/odoo.conf

configure_nginx() {
    # compute available CPU's
    PROPOSED_WORKERS=$(($(nproc)*2+1))

    # ask question during configuration
    db_set odoo-nginx/workers "${PROPOSED_WORKERS}"
    db_input high odoo-nginx/workers || true
    db_go || true

    db_input high odoo-nginx/server_name || true
    db_go || true

    # update odoo configuration file
    # setting number of workers
    db_get odoo-nginx/workers || true
    if [ -n "$RET"  ]; then
        NBWORKERS=$RET
        if [ ! $(grep workers $ODOO_CONFIGURATION_FILE) ]; then
            echo "workers = $NBWORKERS" >> $ODOO_CONFIGURATION_FILE
        else
            sed -i -e "s/workers \?= \?[[:digit:]]\+/workers = $NBWORKERS/" $ODOO_CONFIGURATION_FILE
        fi
    fi

    # setting proxy_mode
    if [ ! $(grep proxy_mode $ODOO_CONFIGURATION_FILE) ]; then
            echo "proxy_mode = True" >> $ODOO_CONFIGURATION_FILE
        else
            sed -i -e "s/proxy_mode \?= \?False/proxy_mode = True/" $ODOO_CONFIGURATION_FILE
        fi

    # update odoo nginx configuration file
    db_get odoo-nginx/server_name || true
    if [ -n "$RET"  ]; then
        SERVERNAME=$RET
        sed -i -e "s/server_name odoo.mycompany.com/server_name ${SERVERNAME}/g" $NGINX_TEMPLATE
    fi

    # enable the odoo site
    cp $NGINX_TEMPLATE $NGINX_ODOO_FILE
    ln -fs $NGINX_ODOO_FILE /etc/nginx/sites-enabled/
    # restart odoo and reload nginx
    invoke-rc.d nginx reload
}

case "${1}" in
    configure)
        # configure nginx if installed
        if dpkg -s nginx > /dev/null 2>&1;
        then
            configure_nginx
        fi;

        if ! getent passwd | grep -q "^odoo:"; then
            adduser --system --home $ODOO_DATA_DIR --quiet --group $ODOO_USER
        fi
        # Register "$ODOO_USER" as a postgres user with "Create DB" role attribute
        su - postgres -c "createuser -d -R -S $ODOO_USER" 2> /dev/null || true
        # Configuration file
        chown $ODOO_USER:$ODOO_GROUP $ODOO_CONFIGURATION_FILE
        chmod 0640 $ODOO_CONFIGURATION_FILE
        # Log
        mkdir -p $ODOO_LOG_DIR
        chown $ODOO_USER:$ODOO_GROUP $ODOO_LOG_DIR
        chmod 0750 $ODOO_LOG_DIR
        # Data dir
        chown $ODOO_USER:$ODOO_GROUP $ODOO_DATA_DIR
        ;;
    *)
        ;;
esac

#DEBHELPER#

exit 0
