/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Field}
        [Field/name]
            notifications
        [Field/model]
            NotificationListComponent
        [Field/type]
            attr
        [Field/target]
            Array
        [Field/compute]
            :threads
                {NotificationListComponent/_getThreads}
                    @record
            :threadNeedactionNotifications
                {Record/insert}
                    [Record/traits]
                        Collection
            {if}
                @record
                .{NotificationListComponent/filter}
                .{=}
                    all
            .{then}
                {Dev/comment}
                    threads with needactions
                :threadNeedactionNotifications
                    {Record/all}
                        [Record/traits]
                            Thread
                        {func}
                            [in]
                                item
                            [out]
                                @item
                                .{Thread/model}
                                .{!=}
                                    mail.box
                                .{&}
                                    @item
                                    .{Thread/needactionMessagesAsOriginThread}
                                    .{Collection/length}
                                    .{>}
                                        0
                .{Collection/sort}
                    {func}
                        [in]
                            item1
                            item2
                        [out]
                            {if}
                                @item1
                                .{Thread/needactionMessagesAsOriginThread}
                                .{Collection/length}
                                .{>}
                                    0
                                .{&}
                                    @item2
                                    .{Thread/needactionMessagesAsOriginThread}
                                    .{Collection/length}
                                    .{=}
                                        0
                            .{then}
                                -1
                            .{elif}
                                @item1
                                .{Thread/needactionMessagesAsOriginThread}
                                .{Collection/length}
                                .{=}
                                    0
                                .{&}
                                    @item2
                                    .{Thread/needactionMessagesAsOriginThread}
                                    .{Collection/length}
                                    .{>}
                                        0
                            .{then}
                                1
                            .{elif}
                                @item1
                                .{Thread/lastNeedactionMessageAsOriginThread}
                                .{&}
                                    @item2
                                    .{Thread/lastNeedactionMessageAsOriginThread}
                            .{then}
                                {if}
                                    @item1
                                    .{Thread/lastNeedactionMessageAsOriginThread}
                                    .{Message/id}
                                    .{<}
                                        @item2
                                        .{Thread/lastNeedactionMessageAsOriginThread}
                                        .{Message/id}
                                .{then}
                                    1
                                .{else}
                                    -1
                            .{elif}
                                @item1
                                .{Thread/lastNeedactionMessageAsOriginThread}
                            .{then}
                                -1
                            .{elif}
                                @item2
                                .{Thread/lastNeedactionMessageAsOriginThread}
                            .{then}
                                1
                            .{else}
                                {if}
                                    @item1
                                    .{Thread/id}
                                    .{<}
                                        @item2
                                        .{Thread/id}
                                .{then}
                                    -1
                                .{else}
                                    1
                .{Collection/map}
                    {func}
                        [in]
                            item
                        [out]
                            {Record/insert}
                                [Record/traits]
                                    Dict
                                [thread]
                                    @item
                                [type]
                                    thread_needaction
                                [uniqueId]
                                    @item
                                    .{Record/id}
                                    .{+}
                                        _needaction
            {Dev/comment}
                thread notifications
            :threadNotifications
                @threads
                .{Collection/sort}
                    {func}
                        [in]
                            item1
                            item2
                        [out]
                            {if}
                                @item1
                                .{Thread/localMessageUnreadCounter}
                                .{>}
                                    0
                                .{&}
                                    @item2
                                    .{Thread/localMessageUnreadCounter}
                                    .{=}
                                        0
                            .{then}
                                -1
                            .{elif}
                                @item1
                                .{Thread/localMessageUnreadCounter}
                                .{=}
                                    0
                                .{&}
                                    @item2
                                    .{Thread/localMessageUnreadCounter}
                                    .{>}
                                        0
                            .{then}
                                1
                            .{elif}
                                @item1
                                .{Thread/lastMessage}
                                .{&}
                                    @item2
                                    .{Thread/lastMessage}
                            .{then}
                                {if}
                                    @item1
                                    .{Thread/lastMessage}
                                    .{Message/id}
                                    .{<}
                                        @item2
                                        .{Thread/lastMessage}
                                        .{Message/id}
                                .{then}
                                    1
                                .{else}
                                    -1
                            .{elif}
                                @item1
                                .{Thread/lastMessage}
                            .{then}
                                -1
                            .{elif}
                                @item2
                                .{Thread/lastMessage}
                            .{then}
                                1
                            .{else}
                                {if}
                                    @item1
                                    .{Thread/id}
                                    .{<}
                                        @item2
                                        .{Thread/id}
                                .{then}
                                    -1
                                .{else}
                                    1
                .{Collection/map}
                    {func}
                        [in]
                            item
                        [out]
                            {Record/insert}
                                [Record/traits]
                                    Dict
                                [thread]
                                    @thread
                                [type]
                                    thread
                                [uniqueId]
                                    @thread
                                    .{Record/id}
            :notifications
                @threadNeedactionNotifications
                .{Collection/concat}
                    @threadNotifications
            {if}
                @record
                .{NotificationListComponent/filter}
                .{=}
                    all
            .{then}
                :notifications
                    {Record/all}
                        [Record/traits]
                            NotificationGroup
                    .{Collection/sort}
                        {func}
                            [in]
                                item1
                                item2
                            [out]
                                @item1
                                .{NotificationGroup/sequence}
                                .{-}
                                    @item2
                                    .{NotificationGroup/sequence}
                    .{Collection/map}
                        {func}
                            [in]
                                item
                            [out]
                                {Record/insert}
                                    [Record/traits]
                                        Dict
                                    [notificationGroup]
                                        @notificationGroup
                                    [uniqueId]
                                        @notificationGroup
                                        .{Record/id}
                    .{Collection/concat}
                        @notifications
            {Dev/comment}
                native notification request
            {if}
                @record
                .{NotificationListComponent/filter}
                .{=}
                    all
                .{&}
                    {Env/isNotificationPermissionDefault}
            .{then}
                {Collection/unshift}
                    @notifications
                    {Record/insert}
                        [Record/traits]
                            Dict
                        [type]
                            odoobotRequest
                        [uniqueId]
                            odoobotRequest
            @notifications
`;
