/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Test}
        [Test/name]
            Credit Error
        [Test/feature]
            snailmail
        [Test/model]
            MessageViewComponent
        [Test/assertions]
            11
        [Test/scenario]
            :testEnv
                {Record/insert}
                    [Record/traits]
                        Env
            @testEnv
            .{Record/insert}
                []
                    [Record/traits]
                        mail.channel
                    [mail.channel/id]
                        11
                []
                    [Record/traits]
                        mail.message
                    [mail.message/body]
                        not empty
                    [mail.message/id]
                        10
                    [mail.message/message_type]
                        snailmail
                    [mail.message/model]
                        mail.channel
                    [mail.message/res_id]
                        11
                []
                    [Record/traits]
                        mail.notification
                    [mail.notification/failure_type]
                        sn_credit
                    [mail.notification/id]
                        11
                    [mail.notification/mail_message_id]
                        10
                    [mail.notification/notification_status]
                        exception
                    [mail.notification/notification_type]
                        snail
                    [mail.notification/res_partner_id]
                        12
                []
                    [Record/traits]
                        res.partner
                    [res.partner/id]
                        12
                    [res.partner/name]
                        Someone
                    [res.partner/partner_share]
                        true
            @testEnv
            .{Record/insert}
                [Record/traits]
                    Server
                [Server/data]
                    @record
                    .{Test/data}
                [Server/mockRPC]
                    {func}
                        [in]
                            route
                            args
                            original
                        [out]
                            {if}
                                @args
                                .{Dict/get}
                                    method
                                .{=}
                                    send_letter
                                .{&}
                                    @args
                                    .{Dict/get}
                                        model
                                    .{=}
                                        mail.message
                                .{&}
                                    @args
                                    .{Dict/get}
                                        args
                                    .{Collection/first}
                                    .{Collection/first}
                                    .{=}
                                        10
                            .{then}
                                {Test/step}
                                    @args
                                    .{Dict/get}
                                        method
                            @original
            :threadViewer
                @testEnv
                .{Record/insert}
                    [Record/traits]
                        ThreadViewer
                    [ThreadViewer/hasThreadView]
                        true
                    [ThreadViewer/thread]
                        @testEnv
                        .{Record/insert}
                            [Record/traits]
                                Thread
                            [Thread/id]
                                11
                            [Thread/model]
                                mail.channel
            @testEnv
            .{Record/insert}
                [Record/traits]
                    ThreadViewComponent
                [ThreadViewComponent/threadView]
                    @threadViewer
                    .{ThreadViewer/threadView}
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/length}
                    .{=}
                        1
                []
                    should display a message component
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationIconClickable}
                []
                    should display the notification icon container
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationIcon}
                []
                    should display the notification icon
            {Test/assert}
                []
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationIconSnailmail}
                []
                    icon should represent snailmail

            @testEnv
            .{Component/afterNextRender}
                {func}
                    @testEnv
                    .{UI/click}
                        @threadViewer
                        .{ThreadViewer/threadView}
                        .{ThreadView/thread}
                        .{Thread/cache}
                        .{ThreadCache/messages}
                        .{Collection/first}
                        .{Message/messageComponents}
                        .{Collection/first}
                        .{MessageViewComponent/notificationIconClickable}
            {Test/assert}
                []
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            SnailmailErrorDialogComponent
                    .{Collection/length}
                    .{=}
                        1
                []
                    error dialog should be open
            {Test/assert}
                []
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            SnailmailErrorDialogComponent
                    .{Collection/first}
                    .{SnailmailErrorDialogComponent/contentCredit}
                []
                    error dialog should have the 'credit' content
            {Test/assert}
                []
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            SnailmailErrorDialogComponent
                    .{Collection/first}
                    .{SnailmailErrorDialogComponent/resendLetterButton}
                []
                    dialog should have a 'Re-send letter' button
            {Test/assert}
                []
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            SnailmailErrorDialogComponent
                    .{Collection/first}
                    .{SnailmailErrorDialogComponent/cancelLetterButton}
                []
                    dialog should have a 'Cancel letter' button

            @testEnv
            .{Component/afterNextRender}
                {func}
                    @testEnv
                    .{UI/click}
                        @testEnv
                        .{Record/all}
                            [Record/traits]
                                SnailmailErrorDialogComponent
                        .{Collection/first}
                        .{SnailmailErrorDialogComponent/cancelLetterButton}
            {Test/assert}
                []
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            SnailmailErrorDialogComponent
                    .{Collection/length}
                    .{=}
                        0
                []
                    dialog should be closed after click on 'Re-send letter'
            {Test/verifySteps}
                []
                    send_letter
                []
                    should have made a RPC call to 'send_letter'
`;
