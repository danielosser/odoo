/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Test}
        [Test/name]
            mark channel as fetched when a new message is loaded and as seen when focusing composer
        [Test/model]
            ThreadViewComponent
        [Test/isFocusRequired]
            true
        [Test/assertions]
            7
        [Test/scenario]
            :testEnv
                {Record/insert}
                    [Record/traits]
                        Env
            @testEnv
            .{Record/insert}
                []
                    [Record/traits]
                        mail.channel
                    [mail.channel/channel_type]
                        chat
                    [mail.channel/id]
                        100
                    [mail.channel/is_pinned]
                        true
                    [mail.channel/members]
                        [0]
                            @record
                            .{Test/data}
                            .{Data/currentPartnerId}
                        [1]
                            10
                []
                    [Record/traits]
                        res.partner
                    [res.partner/email]
                        fred@example.com
                    [res.partner/id]
                        10
                    [res.partner/name]
                        Fred
                []
                    [Record/traits]
                        res.users
                    [res.users/id]
                        10
                    [res.users/partner_id]
                        10
            @testEnv
            .{Record/insert}
                [Record/traits]
                    Server
                [Server/data]
                    @record
                    .{Test/data}
                [Server/mockRPC]
                    {func}
                        [in]
                            route
                            args
                            original
                        [out]
                            {if}
                                @args
                                .{Dict/get}
                                    method
                                .{=}
                                    channel_fetched
                            .{then}
                                {Test/assert}
                                    []
                                        @args
                                        .{Dict/get}
                                            args
                                        .{Collection/first}
                                        .{Collection/first}
                                        .{=}
                                            100
                                    []
                                        channel_fetched is called on the right channel id
                                {Test/assert}
                                    []
                                        @args
                                        .{Dict/get}
                                            model
                                        .{=}
                                            mail.channel
                                    []
                                        channel_fetched is called on the right channel model
                                {Test/step}
                                    rpc:channel_fetch
                            .{elif}
                                @route
                                .{=}
                                    /mail/channel/set_last_seen_message
                            .{then}
                                {Test/assert}
                                    []
                                        @args
                                        .{Dict/get}
                                            channel_id
                                        .{=}
                                            100
                                    []
                                        set_last_seen_message is called on the right channel id
                                {Test/step}
                                    rpc:set_last_seen_message
                            @original
            :thread
                @testEnv
                .{Record/findById}
                    [Thread/id]
                        100
                    [Thread/model]
                        mail.channel
            :threadViewer
                @testEnv
                .{Record/insert}
                    [Record/traits]
                        ThreadViewer
                    [ThreadViewer/hasThreadView]
                        true
                    [ThreadViewer/thread]
                        @thread
            @testEnv
            .{Record/insert}
                [Record/traits]
                    ThreadViewComponent
                [ThreadViewComponent/threadView]
                    @threadViewer
                    .{ThreadViewer/threadView}
            @testEnv
            .{Component/afterNextRender}
                {func}
                    @testEnv
                    .{Env/owlEnv}
                    .{Dict/get}
                        services
                    .{Dict/get}
                        rpc
                    .{Function/call}
                        [route]
                            /mail/chat_post
                        [params]
                            [context]
                                [mockedUserId]]
                                    10
                            [message_content]
                                new message
                            [uuid]
                                @thread
                                .{Thread/uuid}
            {Test/verifySteps}
                []
                    rpc:channel_fetch
                []
                    Channel should have been fetched but not seen yet

            @testEnv
            .{Component/afterNextRender}
                {func}
                    @testEnv
                    .{UI/afterEvent}
                        [eventName]
                            o-thread-last-seen-by-current-partner-message-id-changed
                        [func]
                            @testEnv
                            .{UI/focus}
                                @threadViewer
                                .{ThreadViewer/threadView}
                                .{ThreadView/thread}
                                .{Thread/composer}
                                .{Composer/composerTextInputComponents}
                                .{Collection/first}
                                .{ComposerTextInputComponent/textarea}
                        [message]
                            should wait until last seen by current partner message id changed after focusing the thread
                        [predicate]
                            {func}
                                [in]
                                    thread
                                [out]
                                    @thread
                                    .{Thread/id}
                                    .{=}
                                        100
                                    .{&}
                                        @thread
                                        .{Thread/model}
                                        .{=}
                                            mail.channel
            {Test/verifySteps}
                []
                    rpc:set_last_seen_message
                []
                    Channel should have been marked as seen after threadView got the focus
`;
