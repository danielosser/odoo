/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Action}
        [Action/name]
            FileUploaderComponent/_performUpload
        [Action/params]
            composer
                [type]
                    Composer
            files
                [type]
                    web.FileList
                    .{|}
                        Array
            thread
                [type]
                    Thread
            record
                [type]
                    FileUploaderComponent
        [Action/behavior]
            :uploadingAttachments
                {Record/insert}
                    [Record/traits]
                        Map
            {foreach}
                @files
            .{as}
                file
            .{do}
                {Map/set}
                    [0]
                        @uploadingAttachments
                    [1]
                        @file
                    [2]
                        {Record/insert}
                            [Record/traits]
                                Attachment
                            [Attachment/composer]
                                @composer
                                .{&}
                                    @composer
                            [Attachment/filename]
                                @file
                                .{web.File/name}
                            [Attachment/id]
                                {FileUploaderComponent/geAttachmentNextTemporaryId}
                            [Attachment/isUploading]
                                true
                            [Attachment/mimetype]
                                @file
                                .{web.File/type}
                            [Attachment/name]
                                @file
                                .{web.File/name}
                            [Attachment/originThread]
                                {if}
                                    @composer
                                    .{isFalsy}
                                    .{&}
                                        @thread
                                .{then}
                                    @thread
                                .{else}
                                    undefined
            {foreach}
                @files
            .{as}
                file
            .{do}
                :uploadingAttachment
                    {Map/get}
                        [0]
                            @uploadingAttachments
                        [1]
                            @file
                {if}
                    {Record/exists}
                        @uploadingAttachment
                    .{isFalsy}
                .{then}
                    {Dev/comment}
                        This happens when a pending attachment is being deleted
                        by user before upload.
                    {continue}
                {if}
                    @composer
                    .{&}
                        {Record/exists}
                            @composer
                        .{isFalsy}
                    .{|}
                        @thread
                        .{&}
                            {Record/exists}
                                @thread
                            .{isFalsy}
                .{then}
                    {break}
                {try}
                    :response
                        {Browser/fetch}
                            [0]
                                /mail/attachment/upload
                            [1]
                                [method]
                                    POST
                                [body]
                                    {FileUploaderComponent/_createFormData}
                                        [0]
                                            @record
                                        [1]
                                            [composer]
                                                @composer
                                            [file]
                                                @file
                                            [thread]
                                                @thread
                                [signal]
                                    @uploadingAttachment
                                    .{Attachment/uploadingAbortController}
                                    .{AbortController/signal}
                    :attachmentData
                        {Response/json}
                            @response
                    {if}
                        {Record/exists}
                            @uploadingAttachment
                    .{then}
                        {Record/delete}
                            @uploadingAttachment
                    {if}
                        @composer
                        .{&}
                            {Record/exists}
                                @composer
                            .{isFalsy}
                        .{|}
                            @thread
                            .{&}
                                {Record/exists}
                                    @thread
                                .{isFalsy}
                    .{then}
                        {break}
                    {FileUploaderComponent/_onAttachmentUploaded}
                        [0]
                            @record
                        [1]
                            [attachmentData]
                                @attachmentData
                            [composer]
                                @composer
                            [thread]
                                @thread
                .{catch}
                    {func}
                        [in]
                            e
                        [out]
                            {if}
                                @e
                                .{Error/name}
                                .{!=}
                                    AbortError
                            .{then}
                                {Error/raise}
                                    @e
`;
