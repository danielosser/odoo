/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Test}
        [Test/name]
            basic rendering of canceled notification
        [Test/model]
            ThreadViewComponent
        [Test/assertions]
            8
        [Test/scenario]
            :testEnv
                {Record/insert}
                    [Record/traits]
                        Env
            @testEnv
            .{Record/insert}
                []
                    [Record/traits]
                        mail.channel
                    [mail.channel/id]
                        11
                []
                    [Record/traits]
                        mail.message
                    [mail.message/body]
                        not empty
                    [mail.message/id]
                        10
                    [mail.message/message_type]
                        email
                    [mail.message/model]
                        mail.channel
                    [mail.message/notification_ids]
                        11
                    [mail.message/res_id]
                        11
                []
                    [Record/traits]
                        mail.notification
                    [mail.notification/failure_type]
                        SMTP
                    [mail.notification/id]
                        11
                    [mail.notification/mail_message_id]
                        10
                    [mail.notification/notification_status]
                        canceled
                    [mail.notification/notification_type]
                        email
                    [mail.notification/res_partner_id]
                        12
                []
                    [Record/traits]
                        res.partner
                    [res.partner/id]
                        12
                    [res.partner/name]
                        Someone
            @testEnv
            .{Record/insert}
                [Record/traits]
                    Server
                [Server/data]
                    @record
                    .{Test/data}
            :threadViewer
                @testEnv
                .{Record/insert}
                    [Record/traits]
                        ThreadViewer
                    [ThreadViewer/hasThreadView]
                        true
                    [ThreadViewer/thread]
                        @testEnv
                        .{Record/insert}
                            [Record/traits]
                                Thread
                            [Thread/id]
                                11
                            [Thread/model]
                                mail.channel
            @testEnv
            .{UI/afterEvent}
                [eventName]
                    o-thread-view-hint-processed
                [func]
                    @testEnv
                    .{Record/insert}
                        [Record/traits]
                            ThreadViewComponent
                        [ThreadViewComponent/threadView]
                            @threadViewer
                            .{ThreadViewer/threadView}
                [message]
                    thread become loaded with messages
                [predicate]
                    {func}
                        [in]
                            hint
                            threadViewer
                        [out]
                            @hint
                            .{Hint/type}
                            .{=}
                                messages-loaded
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/model}
                                .{=}
                                    mail.channel
                            .{&}
                                @threadViewer
                                .{ThreadViewer/thread}
                                .{Thread/id}
                                .{=}
                                    11
            {Test/assert}
                [0]
                    @record
                [1]
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationIconClickable}
                [2]
                    should display the notification icon container on the message
            {Test/assert}
                [0]
                    @record
                [1]
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationIcon}
                [2]
                    should display the notification icon on the message
            {Test/assert}
                [0]
                    @record
                [1]
                    @threadViewer
                    .{ThreadViewer/threadView}
                    .{ThreadView/thread}
                    .{Thread/cache}
                    .{ThreadCache/messages}
                    .{Collection/first}
                    .{Message/messageComponents}
                    .{Collection/first}
                    .{MessageViewComponent/notificationNonFailure}
                [2]
                    notification icon shown on the message should represent email

            @testEnv
            .{Component/afterNextRender}
                {func}
                    @testEnv
                    .{UI/click}
                        @threadViewer
                        .{ThreadViewer/threadView}
                        .{ThreadView/thread}
                        .{Thread/cache}
                        .{ThreadCache/messages}
                        .{Collection/first}
                        .{Message/messageComponents}
                        .{Collection/first}
                        .{MessageViewComponent/notificationIconClickable}
            {Test/assert}
                [0]
                    @record
                [1]
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            NotificationPopoverComponent
                    .{Collection/length}
                    .{=}
                        1
                [2]
                    notification popover should be opened after notification has been clicked
            {Test/assert}
                [0]
                    @record
                [1]
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            NotificationPopoverComponent
                    .{Collection/first}
                    .{NotificationPopoverComponent/notificationIcon}
                [2]
                    an icon should be shown in notification popover
            {Test/assert}
                [0]
                    @record
                [1]
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            NotificationPopoverComponent
                    .{Collection/first}
                    .{NotificationPopoverComponent/notification}
                    .{Notification/status}
                    .{=}
                        canceled
                [2]
                    the icon shown in notification popover should be the canceled icon
            {Test/assert}
                [0]
                    @record
                [1]
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            NotificationPopoverComponent
                    .{Collection/first}
                    .{NotificationPopoverComponent/notificationPartnerName}
                [2]
                    partner name should be shown in notification popover
            {Test/assert}
                [0]
                    @record
                [1]
                    @testEnv
                    .{Record/all}
                        [Record/traits]
                            NotificationPopoverComponent
                    .{Collection/first}
                    .{NotificationPopoverComponent/notificationPartnerName}
                    .{web.Element/textContent}
                    .{=}
                        Someone
                [2]
                    partner name shown in notification popover should be the one concerned by the notification
`;
