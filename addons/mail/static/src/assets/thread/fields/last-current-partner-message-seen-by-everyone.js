/** @odoo-module **/

import { Define } from '@mail/define';

export default Define`
    {Field}
        [Field/name]
            lastCurrentPartnerMessageSeenByEveryone
        [Field/model]
            Thread
        [Field/type]
            m2o
        [Field/target]
            Message
        [Field/compute]
            {if}
                {Env/currentPartner}
                .{isFalsy}
            .{then}
                {Record/empty}
                {break}
            :otherPartnerSeenInfos
                @record
                .{Thread/partnerSeenInfos}
                .{Collection/filter}
                    {func}
                        [in]
                            item
                        [out]
                            @item
                            .{ThreadPartnerSeenInfo/partner}
                            .{!=}
                                {Env/currentPartner}
            {if}
                @otherPartnerSeenInfos
                .{Collection/length}
                .{=}
                    0
            .{then}
                {Record/empty}
                {break}
            :otherPartnersLastSeenMessageIds
                @otherPartnerSeenInfos
                .{Collection/map}
                    {func}
                        [in]
                            item
                        [out]
                            {if}
                                @item
                                .{ThreadPartnerSeenInfo/lastSeenMessage}
                            .{then}
                                @item
                                .{ThreadPartnerSeenInfo/lastSeenMessage}
                                .{Message/id}
                            .{else}
                                0
            {if}
                @otherPartnersLastSeenMessageIds
                .{Collection/length}
                .{=}
                    0
            .{then}
                {Record/empty}
                {break}
            :lastMessageSeenByAllId
                {Math/min}
                    @otherPartnersLastSeenMessageIds
            :currentPartnerOrderedSeenMessages
                @record
                .{Thread/orderedNonTransientMessages}
                .{Collection/filter}
                    {func}
                        [in]
                            item
                        [out]
                            @message
                            .{Message/author}
                            .{=}
                                {Env/currentPartner}
                            .{&}
                                @message
                                .{Message/id}
                                .{<=}
                                    @lastMessageSeenByAllId
            {if}
                @currentPartnerOrderedSeenMessages
                .{Collection/length}
                .{=}
                    0
            .{then}
                {Record/empty}
            .{else}
                @currentPartnerOrderedSeenMessages
                .{Collection/slice}
                .{Collection/pop}
`;
